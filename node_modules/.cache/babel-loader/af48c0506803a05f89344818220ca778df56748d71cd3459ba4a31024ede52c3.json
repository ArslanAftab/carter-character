{"ast":null,"code":"const MAX_IMAGE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_IMAGE_MIME_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\nexport const validateDescription = description => {\n  if (description.trim().length < 10) {\n    return {\n      valid: false,\n      message: 'Description should be at least 10 characters.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateImage = image => {\n  if (!image) {\n    return {\n      valid: false,\n      message: 'Please provide an image.'\n    };\n  }\n  if (!ACCEPTED_IMAGE_MIME_TYPES.includes(image.type)) {\n    return {\n      valid: false,\n      message: 'Invalid image format. Accepts only JPEG, PNG, and GIF.'\n    };\n  }\n  if (image.size > MAX_IMAGE_SIZE) {\n    return {\n      valid: false,\n      message: 'Image size should be less than 5MB.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateName = name => {\n  if (name.trim().length === 0) {\n    return {\n      valid: false,\n      message: 'Name is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateGender = gender => {\n  if (gender.trim().length === 0) {\n    return {\n      valid: false,\n      message: 'Gender is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateAge = age => {\n  if (age.trim().length === 0) {\n    return {\n      valid: false,\n      message: 'Age is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateVoice = voice => {\n  if (!voice) {\n    return {\n      valid: false,\n      message: 'Voice selection is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateStep = (currentStep, character) => {\n  switch (currentStep) {\n    case 1:\n      return validateDescription(character.description);\n    case 2:\n      return validateImage(character.image);\n    case 3:\n      return validateName(character.name);\n    case 4:\n      return validateGender(character.gender);\n    case 5:\n      return validateAge(character.age);\n    case 6:\n      return validateVoice(character.voice);\n    default:\n      return {\n        valid: true,\n        message: ''\n      };\n  }\n};","map":{"version":3,"names":["MAX_IMAGE_SIZE","ACCEPTED_IMAGE_MIME_TYPES","validateDescription","description","trim","length","valid","message","validateImage","image","includes","type","size","validateName","name","validateGender","gender","validateAge","age","validateVoice","voice","validateStep","currentStep","character"],"sources":["/Users/arslan/dev/carter-character/carter-character/src/validation/validation.js"],"sourcesContent":["const MAX_IMAGE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_IMAGE_MIME_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\n\nexport const validateDescription = (description) => {\n    \n    if (description.trim().length < 10) {\n      return { valid: false, message: 'Description should be at least 10 characters.' };\n    }\n    return { valid: true, message: '' };\n  };\n\n  export const validateImage = (image) => {\n    if (!image) {\n      return { valid: false, message: 'Please provide an image.' };\n    }\n  \n    if (!ACCEPTED_IMAGE_MIME_TYPES.includes(image.type)) {\n      return { valid: false, message: 'Invalid image format. Accepts only JPEG, PNG, and GIF.' };\n    }\n  \n    if (image.size > MAX_IMAGE_SIZE) {\n      return { valid: false, message: 'Image size should be less than 5MB.' };\n    }\n  \n    return { valid: true, message: '' };\n  };\n  \n  export const validateName = (name) => {\n    if (name.trim().length === 0) {\n      return { valid: false, message: 'Name is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateGender = (gender) => {\n    if (gender.trim().length === 0) {\n      return { valid: false, message: 'Gender is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateAge = (age) => {\n    if (age.trim().length === 0) {\n      return { valid: false, message: 'Age is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateVoice = (voice) => {\n    if (!voice) {\n      return { valid: false, message: 'Voice selection is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateStep = (currentStep, character) => {\n    switch (currentStep) {\n      case 1:\n        return validateDescription(character.description);\n      case 2:\n        return validateImage(character.image);\n      case 3:\n        return validateName(character.name);\n      case 4:\n        return validateGender(character.gender);\n      case 5:\n        return validateAge(character.age);\n      case 6:\n        return validateVoice(character.voice);\n      default:\n        return { valid: true, message: '' };\n    }\n  };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}