{"ast":null,"code":"export const validateDescription = description => {\n  console.log('a');\n  if (description.trim().length < 10) {\n    return {\n      valid: false,\n      message: 'Description should be at least 10 characters.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateImage = image => {\n  if (!image) {\n    return {\n      valid: false,\n      message: 'Please provide an image.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateName = name => {\n  if (name.trim().length === 0) {\n    return {\n      valid: false,\n      message: 'Name is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateGender = gender => {\n  if (gender.trim().length === 0) {\n    return {\n      valid: false,\n      message: 'Gender is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateAge = age => {\n  if (age.trim().length === 0) {\n    return {\n      valid: false,\n      message: 'Age is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateVoice = voice => {\n  if (voice.trim().length === 0) {\n    return {\n      valid: false,\n      message: 'Voice selection is required.'\n    };\n  }\n  return {\n    valid: true,\n    message: ''\n  };\n};\nexport const validateStep = (currentStep, character) => {\n  switch (currentStep) {\n    case 1:\n      return validateDescription(character.description);\n    case 2:\n      return validateImage(character.image);\n    case 3:\n      return validateName(character.name);\n    case 4:\n      return validateGender(character.gender);\n    case 5:\n      return validateAge(character.age);\n    case 6:\n      return validateVoice(character.voice);\n    default:\n      return {\n        valid: true,\n        message: ''\n      };\n  }\n};","map":{"version":3,"names":["validateDescription","description","console","log","trim","length","valid","message","validateImage","image","validateName","name","validateGender","gender","validateAge","age","validateVoice","voice","validateStep","currentStep","character"],"sources":["/Users/arslan/dev/carter-character/carter-character/src/validation/validation.js"],"sourcesContent":["export const validateDescription = (description) => {\n    console.log('a')\n    if (description.trim().length < 10) {\n      return { valid: false, message: 'Description should be at least 10 characters.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateImage = (image) => {\n    if (!image) {\n      return { valid: false, message: 'Please provide an image.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateName = (name) => {\n    if (name.trim().length === 0) {\n      return { valid: false, message: 'Name is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateGender = (gender) => {\n    if (gender.trim().length === 0) {\n      return { valid: false, message: 'Gender is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateAge = (age) => {\n    if (age.trim().length === 0) {\n      return { valid: false, message: 'Age is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateVoice = (voice) => {\n    if (voice.trim().length === 0) {\n      return { valid: false, message: 'Voice selection is required.' };\n    }\n    return { valid: true, message: '' };\n  };\n  \n  export const validateStep = (currentStep, character) => {\n    switch (currentStep) {\n      case 1:\n        return validateDescription(character.description);\n      case 2:\n        return validateImage(character.image);\n      case 3:\n        return validateName(character.name);\n      case 4:\n        return validateGender(character.gender);\n      case 5:\n        return validateAge(character.age);\n      case 6:\n        return validateVoice(character.voice);\n      default:\n        return { valid: true, message: '' };\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAIC,WAAW,IAAK;EAChDC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAChB,IAAIF,WAAW,CAACG,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,EAAE,EAAE;IAClC,OAAO;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAgD,CAAC;EACnF;EACA,OAAO;IAAED,KAAK,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACtC,IAAI,CAACA,KAAK,EAAE;IACV,OAAO;MAAEH,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAA2B,CAAC;EAC9D;EACA,OAAO;IAAED,KAAK,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIC,IAAI,IAAK;EACpC,IAAIA,IAAI,CAACP,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAC5B,OAAO;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAoB,CAAC;EACvD;EACA,OAAO;IAAED,KAAK,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIC,MAAM,IAAK;EACxC,IAAIA,MAAM,CAACT,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9B,OAAO;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAsB,CAAC;EACzD;EACA,OAAO;IAAED,KAAK,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMO,WAAW,GAAIC,GAAG,IAAK;EAClC,IAAIA,GAAG,CAACX,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAC3B,OAAO;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAmB,CAAC;EACtD;EACA,OAAO;IAAED,KAAK,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMS,aAAa,GAAIC,KAAK,IAAK;EACtC,IAAIA,KAAK,CAACb,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAC7B,OAAO;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAA+B,CAAC;EAClE;EACA,OAAO;IAAED,KAAK,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAG,CAAC;AACrC,CAAC;AAED,OAAO,MAAMW,YAAY,GAAGA,CAACC,WAAW,EAAEC,SAAS,KAAK;EACtD,QAAQD,WAAW;IACjB,KAAK,CAAC;MACJ,OAAOnB,mBAAmB,CAACoB,SAAS,CAACnB,WAAW,CAAC;IACnD,KAAK,CAAC;MACJ,OAAOO,aAAa,CAACY,SAAS,CAACX,KAAK,CAAC;IACvC,KAAK,CAAC;MACJ,OAAOC,YAAY,CAACU,SAAS,CAACT,IAAI,CAAC;IACrC,KAAK,CAAC;MACJ,OAAOC,cAAc,CAACQ,SAAS,CAACP,MAAM,CAAC;IACzC,KAAK,CAAC;MACJ,OAAOC,WAAW,CAACM,SAAS,CAACL,GAAG,CAAC;IACnC,KAAK,CAAC;MACJ,OAAOC,aAAa,CAACI,SAAS,CAACH,KAAK,CAAC;IACvC;MACE,OAAO;QAAEX,KAAK,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAG,CAAC;EACvC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}